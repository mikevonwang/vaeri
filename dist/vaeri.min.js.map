{"version":3,"sources":["vaeri.js"],"names":["Vaeri","_classCallCheck","this","state","dom","start","_this","addEventListener","getDOM","processDOM","document","setListeners","processListeners","onMount","element_list","parent","_this2","Object","keys","forEach","key","context","selector","children","selector_full","vaeri_selector","assign","VaeriElementArray","c","_this3","listeners","listener_list","length","listen","arguments","undefined","state_updates","_action_name","action_name","apply","concat","_toConsumableArray","VaeriElement","self","ref","vaeri_self","vaeri_ref","querySelector","classList","getAttribute","setAttribute","insertAdjacentHTML","bind","i","_this4","l","e","call","value","val","_this5","querySelectorAll","push","remove","populate","data","maker","_this6","new_vaeri_ref","cloneNode","new_vaeri_element","appendChild","prototype","Array"],"mappings":"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","file":"vaeri.min.js","sourcesContent":["class Vaeri {\n  constructor() {\n    this.state = {};\n    this.dom = {};\n    this.start();\n  }\n\n  start() {\n    document.addEventListener('DOMContentLoaded', () => {\n      if (this.getDOM) {\n        this.dom = this.processDOM(this.getDOM(), document);\n      }\n      if (this.setListeners) {\n        this.processListeners(this.setListeners(), this.dom);\n      }\n      if (this.onMount) {\n        this.onMount();\n      }\n    });\n  }\n\n  processDOM(element_list, parent) {\n    let dom = {};\n    Object.keys(element_list).forEach((key) => {\n      const context = (parent.vaeri_ref) ? parent.vaeri_ref : document;\n      const selector = element_list[key][0];\n      const children = element_list[key][1];\n      if (typeof selector === 'string') {\n        const selector_full = ((parent.vaeri_selector) ? (parent.vaeri_selector + ' ') : '') + selector;\n        dom[key] = new VaeriElement(this, context, selector_full);\n        if (children) {\n          Object.assign(dom[key], this.processDOM(children, dom[key]));\n        }\n      }\n      else {\n        const selector_full = ((parent.vaeri_selector) ? (parent.vaeri_selector + ' ') : '') + selector[0];\n        dom[key] = new VaeriElementArray(this, context, selector_full);\n        if (children) {\n          dom[key].forEach((c) => {\n            Object.assign(c, this.processDOM(children, c));\n          });\n        }\n      }\n    });\n    return dom;\n  }\n\n  processListeners(listener_list, parent) {\n    Object.keys(listener_list).forEach((key) => {\n      const listeners = listener_list[key][0];\n      const children = listener_list[key][1];\n      if (listeners !== null && listeners.length > 0) {\n        if (parent.length > 0) {\n          parent.forEach((c) => {\n            c[key].listen(listeners);\n          });\n        }\n        else if (parent[key]) {\n          parent[key].listen(listeners);\n        }\n      }\n      if (children) {\n        this.processListeners(children, parent[key]);\n      }\n    });\n  }\n\n  doAction(action_name, state_updates, action_parameters = []) {\n    this.state = Object.assign({}, this.state, state_updates);\n    if (this[action_name]) {\n      this[action_name].call(this, ...action_parameters);\n    }\n  }\n\n}\n\nclass VaeriElement {\n  constructor(self, context, selector, ref) {\n    this.vaeri_self = self;\n    this.vaeri_ref = (ref) ? ref : context.querySelector(selector);\n    this.vaeri_selector = selector;\n\n    this.classList = this.vaeri_ref.classList;\n    this.getAttribute = this.vaeri_ref.getAttribute;\n    this.setAttribute = this.vaeri_ref.setAttribute;\n    this.insertAdjacentHTML = this.vaeri_ref.insertAdjacentHTML.bind(this.vaeri_ref);\n  }\n\n  listen(listeners, i) {\n    listeners.forEach((l) => {\n      this.vaeri_ref.addEventListener(l[0], (e) => {\n        l[1].call(this.vaeri_self, e, this.vaeri_ref, i);\n      });\n    });\n  }\n\n  get value() {\n    return this.vaeri_ref.value;\n  }\n  set value(val) {\n    this.vaeri_ref.value = val;\n  }\n}\n\nfunction VaeriElementArray(self, context, selector) {\n  const elements = context.querySelectorAll(selector);\n  elements.forEach((c) => {\n    if (c.getAttribute('vaeri-template') === null) {\n      this.push(new VaeriElement(self, null, selector, c));\n    }\n    else {\n      this.template = c;\n      this.parent = c.parentNode;\n      c.remove();\n    }\n  });\n\n  this.listen = function(listeners) {\n    this.listeners = listeners;\n    this.forEach((c, i) => {\n      c.listen(listeners, i);\n    });\n  };\n\n  this.populate = function(data, maker) {\n    if (data.length === undefined) {\n      data = [data];\n    }\n    data.forEach((c) => {\n      let new_vaeri_ref = this.template.cloneNode(true);\n      let new_vaeri_element = new VaeriElement(self, null, selector, new_vaeri_ref);\n      this.parent.appendChild(new_vaeri_ref);\n      this.push(new_vaeri_element);\n      \n      const i = this.length - 1;\n      new_vaeri_element.listen(this.listeners, i);\n      maker.call(self, c, i);\n    });\n  };\n}\nVaeriElementArray.prototype = Array.prototype;\n"]}